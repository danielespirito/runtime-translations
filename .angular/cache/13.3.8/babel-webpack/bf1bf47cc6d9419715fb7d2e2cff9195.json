{"ast":null,"code":"import _asyncToGenerator from \"/Users/alquemir/DEV/angular-i18n-demo/runtime-translations/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { registerLocaleData } from '@angular/common';\nimport { APP_INITIALIZER, LOCALE_ID } from '@angular/core';\nimport { loadTranslations } from '@angular/localize';\nimport * as i0 from \"@angular/core\";\n\nclass I18n {\n  constructor() {\n    this.locale = 'en';\n  }\n\n  setLocale() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const userLocale = localStorage.getItem('locale'); // If the user has a preferred language stored in localStorage, use it.\n\n      if (userLocale) {\n        _this.locale = userLocale;\n      } // Use web pack magic string to only include required locale data\n\n\n      const localeModule = yield import(\n      /* webpackInclude: /(de|en|es)\\.mjs$/ */\n      `/node_modules/@angular/common/locales/${_this.locale}.mjs`); // Set locale for built in pipes, etc.\n\n      registerLocaleData(localeModule.default); // Load translation file\n\n      const localeTranslationsModule = yield import(`src/assets/i18n/${_this.locale}.json`); // Load translations for the current locale at run-time\n\n      loadTranslations(localeTranslationsModule.default);\n    })();\n  }\n\n}\n\nI18n.ɵfac = function I18n_Factory(t) {\n  return new (t || I18n)();\n};\n\nI18n.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: I18n,\n  factory: I18n.ɵfac,\n  providedIn: 'root'\n}); // Load locale data at app start-up\n\nfunction setLocale() {\n  return {\n    provide: APP_INITIALIZER,\n    useFactory: i18n => () => i18n.setLocale(),\n    deps: [I18n],\n    multi: true\n  };\n} // Set the runtime locale for the app\n\n\nfunction setLocaleId() {\n  return {\n    provide: LOCALE_ID,\n    useFactory: i18n => i18n.locale,\n    deps: [I18n]\n  };\n}\n\nexport const I18nModule = {\n  setLocale: setLocale,\n  setLocaleId: setLocaleId\n};","map":{"version":3,"sources":["/Users/alquemir/DEV/angular-i18n-demo/runtime-translations/src/app/core/i18n/i18n.module.ts"],"names":["registerLocaleData","APP_INITIALIZER","LOCALE_ID","loadTranslations","i0","I18n","constructor","locale","setLocale","userLocale","localStorage","getItem","localeModule","default","localeTranslationsModule","ɵfac","I18n_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","provide","useFactory","i18n","deps","multi","setLocaleId","I18nModule"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,iBAAnC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;;AACA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAc,IAAd;AACH;;AACKC,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,YAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnB,CADc,CAEd;;AACA,UAAIF,UAAJ,EAAgB;AACZ,QAAA,KAAI,CAACF,MAAL,GAAcE,UAAd;AACH,OALa,CAMd;;;AACA,YAAMG,YAAY,SAAS;AAC3B;AACC,+CAAwC,KAAI,CAACL,MAAO,MAF1B,CAA3B,CAPc,CAUd;;AACAP,MAAAA,kBAAkB,CAACY,YAAY,CAACC,OAAd,CAAlB,CAXc,CAYd;;AACA,YAAMC,wBAAwB,SAAS,OAAQ,mBAAkB,KAAI,CAACP,MAAO,OAAtC,CAAvC,CAbc,CAcd;;AACAJ,MAAAA,gBAAgB,CAACW,wBAAwB,CAACD,OAA1B,CAAhB;AAfc;AAgBjB;;AApBM;;AAsBXR,IAAI,CAACU,IAAL,GAAY,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAAE,SAAO,KAAKA,CAAC,IAAIZ,IAAV,GAAP;AAA2B,CAAlE;;AACAA,IAAI,CAACa,KAAL,GAAa,aAAcd,EAAE,CAACe,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEf,IAAT;AAAegB,EAAAA,OAAO,EAAEhB,IAAI,CAACU,IAA7B;AAAmCO,EAAAA,UAAU,EAAE;AAA/C,CAAtB,CAA3B,C,CACA;;AACA,SAASd,SAAT,GAAqB;AACjB,SAAO;AACHe,IAAAA,OAAO,EAAEtB,eADN;AAEHuB,IAAAA,UAAU,EAAGC,IAAD,IAAU,MAAMA,IAAI,CAACjB,SAAL,EAFzB;AAGHkB,IAAAA,IAAI,EAAE,CAACrB,IAAD,CAHH;AAIHsB,IAAAA,KAAK,EAAE;AAJJ,GAAP;AAMH,C,CACD;;;AACA,SAASC,WAAT,GAAuB;AACnB,SAAO;AACHL,IAAAA,OAAO,EAAErB,SADN;AAEHsB,IAAAA,UAAU,EAAGC,IAAD,IAAUA,IAAI,CAAClB,MAFxB;AAGHmB,IAAAA,IAAI,EAAE,CAACrB,IAAD;AAHH,GAAP;AAKH;;AACD,OAAO,MAAMwB,UAAU,GAAG;AACtBrB,EAAAA,SAAS,EAAEA,SADW;AAEtBoB,EAAAA,WAAW,EAAEA;AAFS,CAAnB","sourcesContent":["import { registerLocaleData } from '@angular/common';\nimport { APP_INITIALIZER, LOCALE_ID } from '@angular/core';\nimport { loadTranslations } from '@angular/localize';\nimport * as i0 from \"@angular/core\";\nclass I18n {\n    constructor() {\n        this.locale = 'en';\n    }\n    async setLocale() {\n        const userLocale = localStorage.getItem('locale');\n        // If the user has a preferred language stored in localStorage, use it.\n        if (userLocale) {\n            this.locale = userLocale;\n        }\n        // Use web pack magic string to only include required locale data\n        const localeModule = await import(\n        /* webpackInclude: /(de|en|es)\\.mjs$/ */\n        `/node_modules/@angular/common/locales/${this.locale}.mjs`);\n        // Set locale for built in pipes, etc.\n        registerLocaleData(localeModule.default);\n        // Load translation file\n        const localeTranslationsModule = await import(`src/assets/i18n/${this.locale}.json`);\n        // Load translations for the current locale at run-time\n        loadTranslations(localeTranslationsModule.default);\n    }\n}\nI18n.ɵfac = function I18n_Factory(t) { return new (t || I18n)(); };\nI18n.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: I18n, factory: I18n.ɵfac, providedIn: 'root' });\n// Load locale data at app start-up\nfunction setLocale() {\n    return {\n        provide: APP_INITIALIZER,\n        useFactory: (i18n) => () => i18n.setLocale(),\n        deps: [I18n],\n        multi: true,\n    };\n}\n// Set the runtime locale for the app\nfunction setLocaleId() {\n    return {\n        provide: LOCALE_ID,\n        useFactory: (i18n) => i18n.locale,\n        deps: [I18n],\n    };\n}\nexport const I18nModule = {\n    setLocale: setLocale,\n    setLocaleId: setLocaleId,\n};\n"]},"metadata":{},"sourceType":"module"}